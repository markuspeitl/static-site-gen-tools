{
    "extend": "./launch.json",
    "default": {},
    "tsNodeDebug": {
        "default": {
            "type": "node",
            "runtimeVersion": "20.9.0",
            "request": "launch",
            "runtimeExecutable": "node",
            "runtimeArgs": [
                "--require",
                "ts-node/register",
                "--enable-source-maps"
            ],
            "cwd": "${workspaceRoot}",
            //"args": [],
            //"name": "",
            "internalConsoleOptions": "openOnSessionStart",
            "sourceMaps": true,
            "env": {
                "TS_NODE_PROJECT": "${workspaceRoot}/tsconfig.json",
                "NODE_OPTIONS": "--enable-source-maps"
            }
        },
        "sampleComponentsDebug": {
            //The default property signifies a new group, instead of a configuration dict --> it is required
            "default": {
                "name": "$params.key debug",
                "args": [
                    "${workspaceRoot}/src/cli.ts",
                    "$params.inputFile",
                    "$params.outputFile"
                ]
            },
            "compile sample dir": {
                "params": {
                    "inputFile": "sample/sample-dir/",
                    "outputFile": "sample/dist/sample-dir/"
                }
            },
            "11ty sample dir": {
                "params": {
                    "inputFile": "sample/eleventy-sample/",
                    "outputFile": "sample/dist/eleventy-sample/"
                }
            },
            "compile current file": {
                "params": {
                    "inputFile": "${file}",
                    "outputFile": "sample/dist/${fileBasename}"
                }
            },
            "sampleTsComponentsDebug": {
                "default": {
                    "name": ".ts $params.key component",
                    "args": [
                        "${workspaceRoot}/src/cli.ts",
                        "sample/ts/$params.key$.ts",
                        "sample/dist/$params.key$.html"
                    ]
                },
                "parametrize-keys": [
                    "functional.component",
                    "prop-styled.component",
                    "sample.component",
                    "simple.component",
                    "sub-sample.component",
                    "very-simple.component"
                ]
            },
            "sampleToDictDirDebug": {
                "default": {
                    "args": [
                        "${workspaceRoot}/src/cli.ts",
                        "sample/$params.inputFile",
                        "sample/dist/$params.outputFile"
                    ]
                },
                //Special key --> no inheritance/merging, only generating targets by passing different parameters
                "parametrize": [
                    {
                        "key": "sample-markdown.md",
                        "inputFile": "sample-markdown.md",
                        "outputFile": "sample-markdown.html"
                    },
                    {
                        "key": "nested-for.md",
                        "inputFile": "nested-for.md",
                        "outputFile": "nested-for.html"
                    },
                    {
                        "key": "sub-content-compile.html",
                        "inputFile": "sub-content-compile.html",
                        "outputFile": "sub-content-compile.html"
                    },
                    {
                        "key": "content-to-insert.md",
                        "inputFile": "content-to-insert.md",
                        "outputFile": "content-to-insert.html"
                    }
                ]
            },
            "sampleCVDebug": {
                "default": {
                    "args": [
                        "${workspaceRoot}/src/cli.ts",
                        "application-cv/$params.inputFile",
                        "application-cv/dist/$params.outputFile"
                    ]
                },
                "parametrize": [
                    {
                        "key": "assembled cv",
                        "inputFile": "assembled-cv.ehtml",
                        "outputFile": "index.html"
                    },
                    {
                        "key": "business-card.md",
                        "inputFile": "business-card.md",
                        "outputFile": "business-card.html"
                    },
                    {
                        "key": "sub-content-compile.html",
                        "inputFile": "sub-content-compile.html",
                        "outputFile": "sub-content-compile.html"
                    }
                ]
            },
            "gen-launch-config-debug": {
                "args": [
                    "${workspaceRoot}/.vscode/gen-launch.ts",
                    "--source",
                    ".vscode/launch-generator-config.json",
                    "--target",
                    ".vscode/launch-generated.json",
                    "-y"
                ]
            }
        }
    }
}




